---
title: 'Меридіан'
author: 'Недільний Футбол'
format: 
    dashboard:
        logo: img/logo.svg
        html-table-processing: none
---


```{python}
#| context: setup

import pandas as pd
import itables
import plotly.express as px
import altair as alt
from games import *
```

# Рейтинг гравців

## Column

```{python}
#| content: valuebox
#| title: 'Останні зміни'
#| icon: calendar-event
#| color: info
dict(
  value = date.today().strftime('%d.%m.%y')
)
```

```{python}
#| content: valuebox
#| title: 'Зіграно матчів'
#| icon: joystick
#| color: primary
dict(
  value = f"{games_df['Дата'].nunique()}/{len(games_date)}"
)
```

```{python}
#| content: valuebox
#| title: 'Середня кількість очок за тур'
#| icon: rulers
#| color: success

dict(
  value = round(games_df[games_df['Команда'].isin(['Червоні', "Жовті", "Сині"])]['Очки'].sum() / games_df.shape[0], 2)
)
```

## Column

```{python}
#| label: rating_df
#| title: Рейтинг гравців

rating_df = games_df.groupby(['Гравець']).agg(
    {
        'Очки': 'sum'
    }
).reset_index()

games_played = games_df.groupby(['Гравець']).agg(
    {
        'Дата': 'nunique'
    }
)
rating_df = rating_df.merge(games_played, on='Гравець')
rating_df = rating_df.rename(columns={'Дата': 'Зіграно матчів'})

rating_df = rating_df.sort_values(by=['Очки', 'Зіграно матчів'], ascending=[False, True])
rating_df = rating_df.reset_index(drop=True)
rating_df['Місце'] = rating_df.index + 1

rating_df['Ефективність'] = round(rating_df['Очки'] / rating_df['Зіграно матчів'], 2)

bench_points = games_df[games_df['Команда'] == 'Запас'].groupby(['Гравець']).agg(
    {
        'Очки': 'sum'
    }
)

rating_df = rating_df.merge(bench_points, on='Гравець', how='left')
rating_df = rating_df.rename(columns={'Очки_y': 'Очків з запасу'})
rating_df = rating_df.rename(columns={'Очки_x': 'Очки'})
rating_df['Очків з запасу'] = rating_df['Очків з запасу'].fillna(0)

rating_df.set_index('Місце', inplace=True)
itables.show(rating_df.reset_index(), searching = False, info = False)
```

### Row

```{python}
#| label: mean_points_plot
#| title: Середня кількість очок за тур

mean_points = games_df[games_df['Команда'].isin(['Червоні', "Жовті", "Сині"])].groupby(['Дата']).agg(
    {
        'Очки': 'mean'
    }
).reset_index()

fig = px.line(
    mean_points,
    x='Дата',
    y='Очки',
    labels={'Очки': '', 'Дата': 'Дата'},
    title=''
)

fig.update_xaxes(
    dtick='M1',
    tickformat='%d.%m.%y'
).add_hline(y=round(games_df[games_df['Команда'].isin(['Червоні', "Жовті", "Сині"])]['Очки'].sum() / games_df.shape[0], 2), line_dash='dash', line_color='red')
```

#### Column

```{python}
#| label: rating_eff_plot
#| title: Топ-5 за ефективністю (>20 матчів)

data = rating_df[rating_df['Зіграно матчів'] > 20].sort_values(by='Ефективність', ascending=False).head(5)

chart_performance = alt.Chart(data).mark_bar().encode(
    y=alt.Y('Гравець:N', sort='-x', title=''),
    x=alt.X('Ефективність:Q', title='Ефективність', axis=None),
    color=alt.Color('Ефективність:Q', scale=alt.Scale(scheme='viridis'), legend=None)
)

text_performance = alt.Chart(data).mark_text(dx=15, dy=0, color='black').encode(
    y=alt.Y('Гравець:N', sort='-x', title=''),
    x=alt.X('Ефективність:Q', title='Ефективність', axis=None),
    text=alt.Text('Ефективність:Q', format='.2f')
)

(chart_performance + text_performance).configure_view(
    strokeOpacity=0
)
```

```{python}
#| label: rating_plot
#| title: Топ-5 за активністю

rating_df['Відсоток зіграних матчів'] = round(rating_df['Зіграно матчів'] / games_df['Дата'].nunique() * 100, 2)
data = rating_df.sort_values(by='Відсоток зіграних матчів', ascending=False).head(5)

bars_active = alt.Chart(data).mark_bar().encode(
    y=alt.Y('Гравець:O', sort='-x', title=''),
    x=alt.X('Відсоток зіграних матчів:Q', title='Відсоток зіграних матчів', axis=None),
    color=alt.Color('Відсоток зіграних матчів:Q', scale=alt.Scale(scheme='viridis'), legend=None)
)

text_active = alt.Chart(data).mark_text(dx=15, dy=0, color='black').encode(
    y=alt.Y('Гравець:O', sort='-x', title=''),
    x=alt.X('Відсоток зіграних матчів:Q', title='Відсоток зіграних матчів', axis=None),
    text=alt.Text('Відсоток зіграних матчів:Q', format='.2f')
)

(bars_active + text_active).configure_view(
    strokeOpacity=0
)
```

#### Row

```{python}
#| label: total_points_by_color
#| title: Загальна сума очок за кольорами

total_points_by_color = games_df[games_df['Команда'].isin(['Червоні', "Жовті", "Сині"])].groupby(['Команда']).agg(
    {
        'Очки': 'sum'
    }
).reset_index()

bars = alt.Chart(total_points_by_color).mark_bar().encode(
    y=alt.Y('Команда:O', sort='-x', title=''),
    x=alt.X('Очки:Q', title='Очки', axis=None),
    color=alt.Color('Команда:N', scale=alt.Scale(domain=['Червоні', 'Жовті', 'Сині'], range=['#E15759', '#FDE725', '#0D6EFD']), legend=None)
)

text = alt.Chart(total_points_by_color).mark_text(dx=15, dy=0, color='black').encode(
    y=alt.Y('Команда:O', sort='-x', title=''),
    x=alt.X('Очки:Q', title='Очки', axis=None),
    text=alt.Text('Очки:Q')
)

(bars + text).configure_view(
    strokeOpacity=0
)
```